pipeline {
  agent any
  tools {
    jdk 'jdk17'
    nodejs 'NodeJS25.1.0'
  }
  environment {
    SCANNER_HOME = tool 'sonar-scanner'   // Jenkins tool name
    IMAGE = "samikhan123/zomato:latest"  
  }
  options {
    timestamps()
  }
  stages {
    stage('Clean workspace') {
      steps { cleanWs() }
    }

    stage('Git Checkout') {
      steps {
        // If this is a Multibranch Pipeline, prefer: checkout scm
        git branch: 'main', url: 'https://github.com/DevopsAliUserAccount/ZomatoProject.git'
      }
    }

    stage('SonarQube Analysis') {
      steps {
        withSonarQubeEnv('sonar-server') { // name from Manage Jenkins > System > SonarQube servers
          sh """
            "${SCANNER_HOME}/bin/sonar-scanner" \
              -Dsonar.projectKey=zomato \
              -Dsonar.projectName=zomato
          """
        }
      }
    }

    stage('Quality Gate') {
      steps {
        timeout(time: 10, unit: 'MINUTES') {
          waitForQualityGate abortPipeline: true
        }
      }
    }

    stage('Install NPM Dependencies') {
      steps { sh 'npm ci || npm install' }
    }

    stage('OWASP Dependency-Check') {
      steps {
        dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit -n',
                         odcInstallation: 'DP-Check'
        dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
      }
    }

    stage('Trivy File Scan') {
      steps {
        // Not failing the build; just capturing output
        sh 'trivy fs . > trivy.txt || true'
      }
    }

    stage('Build Docker Image') {
      steps {
        sh 'docker build -t "$IMAGE" .'
      }
    }

    stage('Tag & Push to Docker Hub') {
      steps {
        withDockerRegistry(credentialsId: 'docker', url: 'https://index.docker.io/v1/') {
          sh 'docker push "$IMAGE"'
        }
      }
    }

    stage('Docker Scout (insights)') {
      steps {
        // Docker Scout is a docker CLI plugin: use `docker scout ...`
        sh '''
          docker scout quickview "$IMAGE" || true
          docker scout cves --only-severity high,critical "$IMAGE" || true
          docker scout recommendations "$IMAGE" || true
        '''
      }
    }

    stage('Deploy to Container') {
      steps {
        sh '''
          docker rm -f zomato || true
          docker run -d --name zomato -p 3000:3000 "$IMAGE"
        '''
      }
    }
  }

  post {
    always {
      emailext(
        to: 'ali223khan@gmail.com',
        subject: "'${currentBuild.result}' - ${env.JOB_NAME} #${env.BUILD_NUMBER}",
        mimeType: 'text/html',
        attachLog: true,
        attachmentsPattern: 'trivy.txt',
        body: """
          <html><body>
            <div style="background:#FFA07A;padding:10px;margin-bottom:10px;color:#fff;font-weight:bold;">
              Project: ${env.JOB_NAME}
            </div>
            <div style="background:#90EE90;padding:10px;margin-bottom:10px;color:#fff;font-weight:bold;">
              Build Number: ${env.BUILD_NUMBER}
            </div>
            <div style="background:#87CEEB;padding:10px;margin-bottom:10px;color:#fff;font-weight:bold;">
              URL: <a style="color:#fff" href="${env.BUILD_URL}">${env.BUILD_URL}</a>
            </div>
          </body></html>
        """
      )
    }
  }
}
